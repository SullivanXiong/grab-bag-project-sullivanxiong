{"version":3,"sources":["GearBagItem.js","GearBagList.js","DevicesItem.js","DevicesList.js","App.js","index.js"],"names":["GearBagItem","gbitem","id","src","image","standard","alt","className","wiki_title","GearBagList","gbitems","map","DevicesItem","deviceitem","draggable","onDragStart","element","dataTransfer","setData","console","log","onDragOver","stopPropagation","DevicesList","deviceitems","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY_DEVICES","App","useState","gearBag","setGearBag","devices","setDevices","pageNumber","setPageNumber","deviceTitles","nextRef","useRef","prevRef","gearBagRef","gearBagFrameRef","toggleDevice","pageNum","newDevices","JSON","parse","localStorage","getItem","i","idxFromPage","$","get","data","then","resizeGearBag","rows","Math","floor","length","current","style","toggleGearBag","title","newGearBag","useEffect","storedGearBag","recurAPICall","key","value","ret","Object","keys","valueKey","concat","setItem","stringify","ref","onDrop","preventDefault","getData","onClick","copyPageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd1dcc45.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function GearBagItem({ gbitem }) {    \n    return (\n        <>\n            <div id=\"gearBagItem\">\n                <img src={gbitem.image.standard} id=\"itemPhoto\" alt=\"standard\"/>\n                <div id=\"itemTitle\" className={gbitem.wiki_title}>{gbitem.wiki_title}</div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport GearBagItem from './GearBagItem'\n\nexport default function GearBagList({ gbitems }) {\n    return (\n        gbitems.map(gbitem => {\n            return <GearBagItem key={gbitem.id} gbitem={gbitem} />  \n        })\n    )\n}\n","import React from 'react'\n\nexport default function DevicesItem({ deviceitem }) {\n    function dragStart(element) {\n        element.dataTransfer.setData('deviceTitle', deviceitem.wiki_title);\n        console.log('dragStart');\n    }\n\n    function dragOver(element) {\n        element.stopPropagation();\n    }\n\n    return (\n        <>\n            <div id=\"devicesItem\" draggable=\"true\" onDragStart={dragStart} onDragOver={dragOver}>\n                <img src={deviceitem.image.standard} id=\"itemPhoto\" alt=\"standard\"/>\n                <div id=\"itemTitle\" className={deviceitem.wiki_title}>{deviceitem.wiki_title}</div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport DevicesItem from './DevicesItem'\n\nexport default function DevicesList({ deviceitems } ) {\n    return (\n        deviceitems.map(deviceitem => {\n            return <DevicesItem key={deviceitem.image.id} deviceitem={deviceitem} />  \n        })\n    )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport GearBagList from './GearBagList'\nimport DevicesList from './DevicesList'\nimport $ from 'jquery'\n\nconst LOCAL_STORAGE_KEY = 'grabBagApp';\nconst LOCAL_STORAGE_KEY_DEVICES = 'devices';\n\nfunction App() {\n    const [gearBag, setGearBag] = useState([]);\n    const [devices, setDevices] = useState([]);\n    const [pageNumber, setPageNumber] = useState([0]);\n    var deviceTitles = []\n\n    const nextRef = useRef();\n    const prevRef = useRef();\n    const gearBagRef = useRef();\n    const gearBagFrameRef = useRef();\n\n    // Load our Gear bag devices from local storage\n    useEffect(() => {\n        const storedGearBag = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n        if (storedGearBag) {\n            setGearBag(storedGearBag);\n        }\n\n        prevRef.current.style = \"display: None;\";\n\n        $.get('https://www.ifixit.com/api/2.0/categories', (data) => {\n            function recurAPICall(key, value) {\n                let ret = [];\n                let lengthOfValue = Object.keys(value).length;\n\n                if (lengthOfValue > 0) {\n                    for (const valueKey in value)\n                        ret = ret.concat(recurAPICall(valueKey, value[valueKey]));\n                    return ret\n                }\n                else \n                    return [key]\n            }\n\n            for (const key in data)\n                deviceTitles = deviceTitles.concat(recurAPICall(key, data[key]));\n        }).then(() => {\n            localStorage.setItem(LOCAL_STORAGE_KEY_DEVICES, JSON.stringify(deviceTitles));\n            toggleDevice(pageNumber[0]);\n        });\n    }, []);\n\n    // Store our Gear bag devices to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(gearBag));\n        resizeGearBag();\n    }, [gearBag]);\n\n    function prevPage() {\n        const copyPageNumber = [...pageNumber];\n        copyPageNumber[0] = copyPageNumber[0] - 1\n        setPageNumber(copyPageNumber);\n        if (copyPageNumber[0] === 0)\n            prevRef.current.style = \"display: None;\";\n        else\n            prevRef.current.style = \"display: block;\";\n        toggleDevice(copyPageNumber[0]);\n    }\n\n    function nextPage() {\n        const copyPageNumber = [...pageNumber];\n        copyPageNumber[0] = copyPageNumber[0] + 1\n        setPageNumber(copyPageNumber);\n        if (copyPageNumber[0] === 0)\n            prevRef.current.style = \"display: None;\";\n        else\n            prevRef.current.style = \"display: block;\";\n        toggleDevice(copyPageNumber[0]);\n    }\n\n    function toggleDevice(pageNum) {\n        let newDevices = []\n        let deviceTitles = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_DEVICES));\n        for (let i = 0; i < 14; i++) {\n            let idxFromPage = i + (14 * pageNum);\n            console.log(idxFromPage);\n            console.log(deviceTitles[idxFromPage]);\n            $.get(`https://www.ifixit.com/api/2.0/categories/${deviceTitles[idxFromPage]}`, (data) => newDevices = [...newDevices, data])\n                .then(() => {\n                    setDevices(newDevices);\n                })\n        }\n    }\n\n    function resizeGearBag() {\n        let rows = Math.floor(gearBag.length / 7)\n        gearBagFrameRef.current.style = `height: ${((rows + 1) * 26) + 3}vh;`\n        gearBagRef.current.style = `height: ${(rows + 1) * 23}vh;`\n    }\n\n    function toggleGearBag(title) {\n        let newGearBag = [...gearBag]\n        \n        $.get(`https://www.ifixit.com/api/2.0/categories/${title}`, (data) => newGearBag = [...newGearBag, data])\n            .then(() => {\n                setGearBag(newGearBag);\n            });\n        resizeGearBag();\n    }\n\n    function drop(element) {\n        element.preventDefault();\n        const device_title = element.dataTransfer.getData('deviceTitle');\n\n        toggleGearBag(device_title);\n        console.log('Drop');\n    }\n\n    function dragOver(element) {\n        element.preventDefault();\n    }\n\n\n    return (\n        <>\n            <div ref={gearBagFrameRef} id=\"gearBagFrame\" onDrop={drop} onDragOver={dragOver}>\n                <h2 id=\"title\">My Gear Bag</h2>\n                <div id=\"gearBag\" ref={gearBagRef}>\n                    <GearBagList gbitems={gearBag} toggleGearBag={toggleGearBag}/>\n                </div>\n            </div>\n            <div id=\"devicesFrame\">\n                <h2 id=\"title\">Devices</h2>\n                <div id=\"devices\">\n                    <DevicesList  deviceitems={devices}/>\n                </div>\n                <button ref={prevRef} id=\"prevButton\" onClick={prevPage}>PREV</button>\n                <button ref={nextRef} id=\"nextButton\" onClick={nextPage}>NEXT</button>\n            </div>\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}