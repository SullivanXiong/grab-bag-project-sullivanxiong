{"version":3,"sources":["GearBagItem.js","GearBagList.js","DevicesItem.js","DevicesList.js","App.js","index.js"],"names":["GearBagItem","gbitem","toggleGrabBag","id","onclick","src","image","standardPhoto","title","GearBagList","gbitems","map","DevicesItem","deviceitem","toggleDevice","standard","wiki_title","DevicesList","deviceitems","LOCAL_STORAGE_KEY","LOCAL_STORAGE_KEY_DEVICES","App","useState","gearBag","setGearBag","devices","setDevices","pageNumber","setPageNumber","deviceTitles","nextRef","useRef","prevRef","pageNum","newDevices","JSON","parse","localStorage","getItem","i","idxFromPage","console","log","$","get","data","then","useEffect","storedGearBag","current","style","recurAPICall","key","value","ret","Object","keys","length","valueKey","concat","setItem","stringify","ref","onClick","copyPageNumber","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15d3cb1f.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function GearBagItem({ gbitem, toggleGrabBag }) {\n    return (\n        <>\n            <div id=\"gearBagItem\" onclick={toggleGrabBag}>\n                <img src={gbitem.image.standardPhoto} id=\"itemPhoto\" />\n                <div id=\"itemTitle\">{gbitem.title}</div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport GearBagItem from './GearBagItem'\n\nexport default function GearBagList({ gbitems, toggleGrabBag }) {\n    return (\n        gbitems.map(gbitem => {\n            return <GearBagItem key={gbitem.id} toggleGrabBag={toggleGrabBag} gbitem={gbitem} />  \n        })\n    )\n}\n","import React from 'react'\n\nexport default function DevicesItem({ deviceitem, toggleDevice }) {\n    return (\n        <>\n            <div id=\"devicesItem\" onclick={toggleDevice}>\n                <img src={deviceitem.image.standard} id=\"itemPhoto\" />\n                <div id=\"itemTitle\">{deviceitem.wiki_title}</div>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\nimport DevicesItem from './DevicesItem'\n\nexport default function DevicesList({ deviceitems, toggleDevice }) {\n    return (\n        deviceitems.map(deviceitem => {\n            return <DevicesItem key={deviceitem.image.id} toggleDevice={toggleDevice} deviceitem={deviceitem} />  \n        })\n    )\n}\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport GearBagList from './GearBagList'\nimport DevicesList from './DevicesList'\nimport $ from 'jquery'\n\nconst LOCAL_STORAGE_KEY = 'grabBagApp';\nconst LOCAL_STORAGE_KEY_DEVICES = 'devices';\n\nfunction App() {\n    const [gearBag, setGearBag] = useState([]);\n    const [devices, setDevices] = useState([]);\n    const [pageNumber, setPageNumber] = useState([0]);\n    var deviceTitles = [];\n\n    const nextRef = useRef();\n    const prevRef = useRef();\n\n    // Load our Gear bag devices from local storage\n    useEffect(() => {\n        const storedGearBag = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n        if (storedGearBag) setGearBag(storedGearBag);\n\n        prevRef.current.style = \"display: None;\";\n\n        $.get('https://www.ifixit.com/api/2.0/categories', (data) => {\n            function recurAPICall(key, value) {\n                let ret = [];\n                let lengthOfValue = Object.keys(value).length;\n\n                if (lengthOfValue > 0) {\n                    for (const valueKey in value)\n                        ret = ret.concat(recurAPICall(valueKey, value[valueKey]));\n                    return ret\n                }\n                else \n                    return [key]\n            }\n\n            for (const key in data)\n                deviceTitles = deviceTitles.concat(recurAPICall(key, data[key]));\n        }).then(() => {\n            localStorage.setItem(LOCAL_STORAGE_KEY_DEVICES, JSON.stringify(deviceTitles));\n            toggleDevice(pageNumber[0]);\n        });\n    }, []);\n\n    // Store our Gear bag devices to local storage\n    useEffect(() => {\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(gearBag));\n    }, [gearBag]);\n\n    function prevPage() {\n        const copyPageNumber = [...pageNumber];\n        copyPageNumber[0] = copyPageNumber[0] - 1\n        setPageNumber(copyPageNumber);\n        if (copyPageNumber[0] === 0)\n            prevRef.current.style = \"display: None;\";\n        else\n            prevRef.current.style = \"display: block;\";\n        toggleDevice(copyPageNumber[0]);\n    }\n\n    function nextPage() {\n        const copyPageNumber = [...pageNumber];\n        copyPageNumber[0] = copyPageNumber[0] + 1\n        setPageNumber(copyPageNumber);\n        if (copyPageNumber[0] === 0)\n            prevRef.current.style = \"display: None;\";\n        else\n            prevRef.current.style = \"display: block;\";\n        toggleDevice(copyPageNumber[0]);\n    }\n\n    function toggleGrabBag(title) {\n        return;\n    }\n\n    function toggleDevice(pageNum) {\n        let newDevices = []\n        let deviceTitles = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY_DEVICES));\n        for (let i = 0; i < 14; i++) {\n            let idxFromPage = i + (14 * pageNum);\n            console.log(idxFromPage);\n            console.log(deviceTitles[idxFromPage]);\n            $.get(`https://www.ifixit.com/api/2.0/categories/${deviceTitles[idxFromPage]}`, (data) => newDevices = [...newDevices, data])\n                .then(() => {\n                    setDevices(newDevices);\n                })\n        }\n    }\n\n    return (\n        <>\n            <div id=\"gearBagFrame\">\n                <h2 id=\"title\">My Gear Bag</h2>\n                <div id=\"gearBag\">\n                    <GearBagList gbitems={gearBag} toggleGrabBag={toggleGrabBag} />\n                </div>\n            </div>\n            <div id=\"devicesFrame\">\n                <h2 id=\"title\">Devices</h2>\n                <div id=\"devices\">\n                    <DevicesList  deviceitems={devices} toggleDevice={toggleDevice} />\n                </div>\n                <button ref={prevRef} id=\"prevButton\" onClick={prevPage}>PREV</button>\n                <button ref={nextRef} id=\"nextButton\" onClick={nextPage}>NEXT</button>\n            </div>\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}